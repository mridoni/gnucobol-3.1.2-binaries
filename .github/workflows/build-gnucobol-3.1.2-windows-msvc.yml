name: gnucobol-3.1.2-windows-msvc

on:
  workflow_dispatch
  
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

env:
  VCPKG_ROOT: C:\vcpkg
  SOLUTION_FILE_PATH: build_windows/vs2019/GnuCOBOL.sln
  
permissions:
  contents: read

jobs:
  gnucobol_3_1_2_windows_msvc:
    
    name: gnucobol-3.1.2-windows
    env:
      BUILD_CONFIGURATION: Release

#    runs-on: windows-latest
    runs-on: self-hosted
    
    steps:
    - uses: actions/checkout@v3
      with:
          repository: 'OCamlPro/gnucobol'
          ref: gnucobol-3.1.2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
        
    - name: Build
      shell: cmd
      working-directory: ${{ github.workspace }}
      run: |
           echo ${{ env.GITHUB_WORKSPACE }}
           echo ${{ github.workspace }}
           
    - name: Install vcpkg packages (x64)
      uses: mridoni/my-vcpkg-action@v3
      with:
          pkgs: berkeleydb mpir pdcurses libxml2 cjson
          triplet: x64-windows
          disable-cache: false
          cache-key: x64-pkgs
          
    - name: Install vcpkg packages (x86)
      uses: mridoni/my-vcpkg-action@v3
      with:
          pkgs: berkeleydb mpir pdcurses libxml2 cjson
          triplet: x86-windows
          disable-cache: false       
          cache-key: x86-pkgs
          
    - name: Prepare sources     
      shell: cmd
      working-directory: ${{ github.workspace }}    
      run: |
         echo "VCPKG_ROOT         : ${{env.VCPKG_ROOT}}"
         echo "BUILD_CONFIGURATION: ${{env.BUILD_CONFIGURATION}}"
         echo "SOLUTION_FILE_PATH : ${{env.SOLUTION_FILE_PATH}}"
         :: ${{env.VCPKG_ROOT}}\vcpkg integrate install
         :: choco install -y winflexbison3
         powershell build_windows\maketarstamp.ps1 > tarstamp.h
         copy build_windows\config.h.in build_windows\config.h
         sed -i 's/#define\ CONFIGURED_ISAM\ *VBISAM/#define\ CONFIGURED_ISAM\ BDB/' build_windows\config.h
         sed -i 's/#define\ CONFIGURED_XML\ *NOXML/#define\ CONFIGURED_XML\ XML2/' build_windows\config.h
         sed -i 's/#define\ CONFIGURED_JSON\ *NOJSON/#define\ CONFIGURED_JSON\ CJSON_LOCAL/' build_windows\config.h      
         win_bison -o "cobc\parser.c" "cobc\parser.y"
         win_bison -o "cobc\ppparse.c" "cobc\ppparse.y"
         win_flex -o "cobc\pplex.c" "cobc\pplex.l"
         win_flex -o "cobc\scanner.c" "cobc\scanner.l"  
         
    - name: Build (x64)
      shell: cmd
      working-directory: ${{ github.workspace }}
      env:
          VCPKG_INCLUDE: ${{env.VCPKG_ROOT}}\installed\x64-windows\include;${{env.VCPKG_ROOT}}\installed\x64-windows\include\cjson;${{ github.workspace }}\build_windows;${{ github.workspace }}
          LIBPATH: ${{env.VCPKG_ROOT}}\installed\x64-windows\lib
      run: |
         msbuild /m /p:Platform=x64 /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}} /p:IncludePath="${{ env.VCPKG_INCLUDE }};${{ '$(IncludePath)' }}"

    - name: Build (x86)
      shell: cmd
      working-directory: ${{ github.workspace }}
      env:
          VCPKG_INCLUDE: ${{env.VCPKG_ROOT}}\installed\x86-windows\include;${{env.VCPKG_ROOT}}\installed\x86-windows\include\cjson;${{ github.workspace }}\build_windows;${{ github.workspace }}
          LIBPATH: ${{env.VCPKG_ROOT}}\installed\x86-windows\lib
      run: |     
         msbuild /m /p:Platform=x86 /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}} /p:IncludePath="${{ env.VCPKG_INCLUDE }};${{ '$(IncludePath)' }}" /p:LibPath="${{ env.VCPKG_LIBPATH }};${{ '$(LibPath)' }}"

#    - name: Archive production artifacts
#      uses: actions/upload-artifact@v3
#      with:
#        name: archive-gix-ide-windows-msvc-${{env.PLATFORM_ID}}-artifacts
#        path: |
#          ${{ github.workspace }}/${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}/*.dll
#          ${{ github.workspace }}/${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}/libgixsql.lib
#          ${{ github.workspace }}/${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}/*.exe
