name: gnucobol-3.1.2-windows-msvc

on:
  workflow_dispatch
  
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

env:
  VCPKG_ROOT: C:\vcpkg
  SOLUTION_FILE_PATH: build_windows/vs2019/GnuCOBOL.sln
  
permissions:
  contents: read

jobs:
  gnucobol_3_1_2_windows_msvc:
    name: gnucobol-3.1.2-windows
    env:
      BUILD_CONFIGURATION: Release

    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
          repository: 'OCamlPro/gnucobol'
          ref: gnucobol-3.1.2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
        
    - name: Install vcpkg packages (x64)
      uses: mridoni/my-vcpkg-action@v1
      with:
          pkgs: berkeleydb mpir ncurses
          triplet: x64-windows
          disable-cache: false

    - name: Build (x64)
      shell: cmd
      working-directory: ${{ github.workspace }}
      env:
          BUILD_PLATFORM: x64      
          PLATFORM_ID: x64    
      run: |
        echo "VCPKG_ROOT         : ${{env.VCPKG_ROOT}}"
        echo "BUILD_PLATFORM     : ${{env.BUILD_PLATFORM}}"
        echo "BUILD_CONFIGURATION: ${{env.BUILD_CONFIGURATION}}"
        echo "SOLUTION_FILE_PATH : ${{env.SOLUTION_FILE_PATH}}"
        vcpkg integrate install
        msbuild /m /p:Platform=${{env.BUILD_PLATFORM}} /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

#    - name: Archive production artifacts
#      uses: actions/upload-artifact@v3
#      with:
#        name: archive-gix-ide-windows-msvc-${{env.PLATFORM_ID}}-artifacts
#        path: |
#          ${{ github.workspace }}/${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}/*.dll
#          ${{ github.workspace }}/${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}/libgixsql.lib
#          ${{ github.workspace }}/${{env.BUILD_PLATFORM}}/${{env.BUILD_CONFIGURATION}}/*.exe
